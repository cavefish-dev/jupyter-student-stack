name: Create and publish a Docker image

on:
  workflow_dispatch: # Trigger the workflow manually from the GitHub Actions UI.
  push:
    branches:
      - main # Trigger on pushes to the main branch.
    patterns:
      - 'Dockerfile' # Trigger on changes to the Dockerfile.
      - 'jupyter_server_config.py' # Trigger on changes to this file.

env:
  REGISTRY: cavefish # Docker registry username or organization.
  IMAGE_NAME: jupyter-student-stack # Name of the Docker image to be built and pushed.

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner.
    strategy:
      fail-fast: false # Allow all matrix jobs to complete even if one fails.
      matrix:
        arch: # Define architectures for multi-platform builds.
          - amd64
          - arm64
    permissions: # Define permissions required for the workflow.
      contents: read # Read access to the repository contents.
      packages: write # Write access to the container registry.
      attestations: write # Write access for signing attestations.
      id-token: write # Generate OIDC tokens for authentication.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Check out the repository code.

      - name: Log in to the Container registry
        uses: docker/login-action@v3 # Log in to Docker Hub.
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }} # Docker Hub username.
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Docker Hub token stored as a secret.

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7 # Generate metadata for the Docker image.
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} # Specify the image name.
          tags: | # Define tags for the image.
            type=schedule,pattern={{date 'YYYY-MM-DD'}}-${{ matrix.arch }} # Date-based tag for each architecture.
            type=raw,value=latest-${{ matrix.arch }},enable={{is_default_branch}} # "Latest" tag for the default branch.

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3 # Enable multi-platform builds using QEMU.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Set up Docker Buildx for building multi-platform images.

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6 # Build and push the Docker image.
        with:
          context: . # Use the current directory as the build context.
          platforms: linux/${{ matrix.arch }} # Build for the specified architecture.
          push: true # Push the image to the registry.
          tags: ${{ steps.meta.outputs.tags }} # Use the generated tags.
          labels: ${{ steps.meta.outputs.labels }} # Use the generated labels.
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-${{ matrix.arch }} # Use cache from the latest image.
          cache-to: type=inline # Inline caching for faster builds.

  tag-images-as-latest:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner.
    needs: build-and-push-image # Run this job after the "build-and-push-image" job.
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Check out the repository code.

      - name: Log in to the Container registry
        uses: docker/login-action@v3 # Log in to Docker Hub.
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }} # Docker Hub username.
          password: ${{ secrets.DOCKERHUB_TOKEN }} # Docker Hub token stored as a secret.

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7 # Generate metadata for the Docker image.
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} # Specify the image name.
          tags: | # Define tags for the image.
            type=schedule,pattern={{date 'YYYY-MM-DD'}} # Date-based tag.
            type=raw,value=latest,enable={{is_default_branch}} # "Latest" tag for the default branch.

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3 # Enable multi-platform builds using QEMU.

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Set up Docker Buildx for building multi-platform images.

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6 # Build and push the Docker image.
        with:
          context: . # Use the current directory as the build context.
          platforms: linux/arm64,linux/amd64 # Build for both amd64 and arm64 architectures.
          push: true # Push the image to the registry.
          tags: ${{ steps.meta.outputs.tags }} # Use the generated tags.
          labels: ${{ steps.meta.outputs.labels }} # Use the generated labels.
          cache-from: | # Use cache from the latest images for both architectures.
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64
            type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm64
          cache-to: type=inline # Inline caching for faster builds.
